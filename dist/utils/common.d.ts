import { Ed25519Keypair, PaginatedObjectsResponse, PaginationArguments, Secp256k1Keypair, SuiAddress, SuiObjectDataOptions, SuiObjectResponse, SuiObjectResponseQuery } from '@mysten/sui.js';
import { NFT, SuiObjectIdType } from '../types/sui';
import { Pool, Position, PositionReward } from '../modules/resourcesModule';
import { TickData } from '../types/clmmpool';
import SDK from '../main';
export declare function toDecimalsAmount(amount: number | string, decimals: number | string): number;
export declare function asUintN(int: bigint, bits?: number): string;
export declare function asIntN(int: bigint, bits?: number): number;
export declare function fromDecimalsAmount(amount: number | string, decimals: number | string): number;
export declare function secretKeyToEd25519Keypair(secretKey: string | Uint8Array, ecode?: 'hex' | 'base64'): Ed25519Keypair;
export declare function secretKeyToSecp256k1Keypair(secretKey: string | Uint8Array, ecode?: 'hex' | 'base64'): Secp256k1Keypair;
export declare function buildPool(objects: SuiObjectResponse): Pool;
export declare function buildPosition(objects: SuiObjectResponse): Position;
export declare function buildPositionReward(fields: any): PositionReward;
export declare function buildNFT(objects: any): NFT;
export declare function buildTickData(objects: SuiObjectResponse): TickData;
export declare function buildTickDataByEvent(fields: any): TickData;
export declare function loopToGetAllQueryEvents(sdk: any, params: any): Promise<any>;
export declare function getOwnedObjects(sdk: SDK, owner: SuiAddress, params: PaginationArguments<PaginatedObjectsResponse['nextCursor']> & SuiObjectResponseQuery): Promise<any>;
export declare function multiGetObjects(sdk: SDK, ids: SuiObjectIdType[], options?: SuiObjectDataOptions, limit?: number): Promise<any[]>;
